{
  "name": "gulp-cdnizer",
  "version": "0.1.1",
  "description": "A plugin for Gulp",
  "keywords": [
    "gulpplugin",
    "cdn"
  ],
  "homepage": "https://github.com/OverZealous/gulp-cdnizer",
  "bugs": "https://github.com/OverZealous/gulp-cdnizer/issues",
  "author": {
    "name": "Phil DeJarnett",
    "email": "",
    "url": "https://github.com/OverZealous"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/OverZealous/gulp-cdnizer.git"
  },
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*.js --reporter spec",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "dependencies": {
    "through2": "*",
    "gulp-util": "~2.2.0",
    "minimatch": "~0.2.14",
    "deepmerge": "~0.2.7",
    "lodash": "~2.4.1"
  },
  "devDependencies": {
    "mocha": "*",
    "coveralls": "*",
    "mocha-lcov-reporter": "*",
    "istanbul": "*",
    "event-stream": "*",
    "should": "~2.1.0"
  },
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "readme": "# gulp-cdnizer\n  [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\n  \n  > cdnizer plugin for [gulp](https://github.com/wearefractal/gulp)\n  \n  This plugin will replace references in HTML and other files with CDN locations.  It's flexible without being overly complicated, and handles private *and* public CDNs.  It can use your bower installation to determine file versions.\n  \n  It also provides optional fallback scripts for failed file loading.  By default it can only handle failed JavaScript files, but it shouldn't be too difficult to provide a better script.\n  \n  ## Usage\n  \n  First, install `gulp-cdnizer` as a development dependency:\n  \n  ```shell\n  npm install --save-dev gulp-cdnizer\n  ```\n  \n  Then, add it to your `gulpfile.js`:\n  \n  ```javascript\n  var cdnizer = require(\"gulp-cdnizer\");\n  \n  gulp.src(\"./src/index.html\")\n          .pipe(cdnizer({\n              defaultBase: \"//my.cdn.host/base\",\n              allowRev: true,\n              allowMin: true,\n              files: [\n                  'js/app.js',\n                  {\n                      file: 'vendor/angular/angular.js',\n                      package: 'angular',\n                      test: 'angular',\n                      cdn: '//ajax.googleapis.com/ajax/libs/angularjs/${ major }.${ minor }.${ patch }/angular.min.js'\n                  },\n                  {\n                      file: 'vendor/firebase/firebase.js',\n                      test: 'Firebase',\n                      cdn: '//cdn.firebase.com/v0/firebase.js'\n                  }\n              ]\n          })\n          .pipe(gulp.dest(\"./dist\"));\n          \n  // Alternatively, just pass in the files array if you don't need to provide any options, and only have custom files:\n  gulp.src(\"./src/index.html\")\n          .pipe(cdnizer([\n              {\n                  file: 'vendor/angular/angular.js',\n                  package: 'angular',\n                  test: 'angular',\n                  cdn: '//ajax.googleapis.com/ajax/libs/angularjs/${ major }.${ minor }.${ patch }/angular.min.js'\n              },\n              {\n                  file: 'vendor/firebase/firebase.js',\n                  test: 'Firebase',\n                  cdn: '//cdn.firebase.com/v0/firebase.js'\n              }\n          ])\n          .pipe(gulp.dest(\"./dist\"));\n  ```\n  \n  ## API\n  \n  For full usage and API, [check the GitHub repository.](https://github.com/OverZealous/gulp-cdnizer).\n  \n  ## License\n  \n  [MIT License](http://en.wikipedia.org/wiki/MIT_License)\n  \n  [npm-url]: https://npmjs.org/package/gulp-cdnizer\n  [npm-image]: https://badge.fury.io/js/gulp-cdnizer.png\n  \n  [travis-url]: http://travis-ci.org/OverZealous/gulp-cdnizer\n  [travis-image]: https://secure.travis-ci.org/OverZealous/gulp-cdnizer.png?branch=master"
}
